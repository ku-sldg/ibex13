Individual : CONTEXT = 
BEGIN
  CELL : TYPE = {c1,c2,c3,c4,c5,c6,c7,c8,c9};
  HEALTH : TYPE = {healthy,unhealthy,dead};
  RESOURCES : TYPE = {zero,low,high};
  MONTH : TYPE = {Jan,Feb,March,Apr,May,June,July,Aug,Sept,Oct,Nov,Dec}; %month
  STAGE : TYPE = {m_kid,f_kid,m_sm,f_sm,m_rut,f_rut,pregnant,weaning,null};
  FLAG : TYPE = BOOLEAN;
  % interactions between individual ibex (or herd) and location
  
  	inc_h_down(h : HEALTH): HEALTH = 
  		IF h=healthy THEN unhealthy
  		ELSE dead
  		ENDIF;

  	inc_h_up(h : HEALTH): HEALTH = 
  		IF h=dead THEN dead
  		ELSE healthy
  		ENDIF;
  		
  	inc_r_up(r : RESOURCES): RESOURCES = 
  		IF r=zero THEN low
  		ELSE high
  		ENDIF;
  		
  	inc_r_down(r : RESOURCES): RESOURCES =
  		IF r=high THEN low
  		ELSE zero
  		ENDIF;
  		
    clock(m : MONTH): MONTH = 
  		IF m=Jan THEN Feb
  		ELSIF m=Feb THEN March
  		ELSIF m=March THEN Apr
  		ELSIF m=Apr THEN May
  		ELSIF m=May THEN June
  		ELSIF m=June THEN July
  		ELSIF m=July THEN Aug
  		ELSIF m=Aug THEN Sept
  		ELSIF m=Sept THEN Oct
  		ELSIF m=Oct THEN Nov
  		ELSIF m=Nov THEN Dec
  		ELSE Jan
  		ENDIF;
  	
  	mature(m : MONTH, h : HEALTH, s : STAGE, f : FLAG): STAGE =
  		IF h=dead THEN null 		%ibex is dead, empties spot
  		ELSIF m=Sept AND h=healthy AND s=m_sm 
  				THEN m_rut
  		ELSIF m=Sept AND h=healthy AND s=f_sm 
  				THEN f_rut
  		ELSIF m=Oct OR m=Nov AND h=healthy AND f=TRUE AND s=f_rut 
  				THEN pregnant 		%fertile, females become pregnant
		ELSIF h=healthy AND s=pregnant 
				THEN weaning
  		ELSIF h=unhealthy AND s=pregnant 
  				THEN f_sm 			%mother is unhealthy, baby dies
  		ELSIF m=Dec AND h=healthy AND s=m_kid 
  				THEN m_sm 			%matures after first year (not accurate)
  		ELSIF m=Dec AND h=healthy AND s=f_kid 
  				THEN f_sm
  		ELSE s
  		ENDIF;
  	
  	%fert(): BOOLEAN = 
  	
  	dangerous(c : CELL, p : CELL): BOOLEAN =
  		IF c=p THEN TRUE
  		ELSE FALSE
  		ENDIF;
  		
  Individual : MODULE =
  BEGIN
    LOCAL c : CELL 						%ibex location
    LOCAL a : ARRAY CELL OF RESOURCES 	%landscape resources/food availability
    LOCAL h : HEALTH 					%ibex health
    LOCAL m : MONTH 					%time increments
    LOCAL s : STAGE 					%ibex life stage
    LOCAL f : FLAG 						%fertile, there exists >=1 m_rut AND 1 f_rut
    LOCAL p : CELL						%predator location
    LOCAL danger : FLAG
    
  DEFINITION
  	p IN {c6,c8,c9};
  	danger = dangerous(c,p);
  	
  INITIALIZATION
    c = c1;
    h = healthy;
    a = [[c:CELL]high];
    m = July;
    s = f_sm;
    f = TRUE; 
    p = c6;
    
  TRANSITION
  [ 
     %try to make indexed arrays for a herd
     h=dead OR s=null --> 
    	h'=dead;
    	c'=c;
    	s'=null;
     []	
     a[c]=zero AND c=c' --> 
    	h'=inc_h_down(h);
    	m'=clock(m);
     	s'=mature(m,h,s,f);	

     []
     c=c1 -->
    	a'=[[c:CELL] if c=c1 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
     	c' IN {c1,c2,c4,c5};
     	m'=clock(m);
     	s'=mature(m,h,s,f);
		%would like to say, if danger=TRUE then c=c1 (ibex escapes) else in {..}
     []
     c=c2 -->
    	a'=[[c:CELL] if c=c2 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
     	c' IN {c1,c2,c3,c4,c5,c6};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

     []
    c=c3 -->
    	a'=[[c:CELL] if c=c3 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c2,c3,c5,c6};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

    []
    c=c4 --> 
    	a'=[[c:CELL] if c=c4 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c1,c2,c4,c5,c7,c8};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

    []
    c=c5 -->  
    	a'=[[c:CELL] if c=c5 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c1,c2,c3,c4,c5,c6,c7,c8,c9};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

    []
    c=c6 --> 
    	a'=[[c:CELL] if c=c6 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c2,c3,c5,c6,c8,c9};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

    []
    c=c7 -->  
    	a'=[[c:CELL] if c=c7 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c4,c5,c7,c8};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

    []
    c=c8 -->  
    	a'=[[c:CELL] if c=c8 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c4,c5,c6,c7,c8,c9};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

    []
    c=c9 -->  
    	a'=[[c:CELL] if c=c9 then inc_r_down(a[c]) else inc_r_up(a[c]) endif]; 
     	h'= IF danger=TRUE then inc_h_down(h) ELSE inc_h_up(h) ENDIF;
    	c' IN {c5,c6,c8,c9};
     	m'=clock(m);
     	s'=mature(m,h,s,f);

  ]
  END;
  
END